"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.consumerRouter = void 0;
const express_1 = __importDefault(require("express"));
const consumerRouter = express_1.default.Router();
exports.consumerRouter = consumerRouter;
const validateToken_1 = require("../middlewares/validateToken");
const validateRefreshToken_1 = require("../middlewares/validateRefreshToken");
const isConsumer_1 = require("../middlewares/isConsumer");
const addFavController_1 = require("../controllers/consumer/favoriteMeal/addFavController");
const addMealCartController_1 = require("../controllers/consumer/cart/addMealCartController");
const seeFavController_1 = require("../controllers/consumer/favoriteMeal/seeFavController");
const seeOneFavController_1 = require("../controllers/consumer/favoriteMeal/seeOneFavController");
const removeFavController_1 = require("../controllers/consumer/favoriteMeal/removeFavController");
const seeMealCartController_1 = require("../controllers/consumer/cart/seeMealCartController");
const removeMealsCartController_1 = require("../controllers/consumer/cart/removeMealsCartController");
const seeTradesHistoryController_1 = require("../controllers/consumer/trades/seeTradesHistoryController");
const removeTicketController_1 = require("../controllers/consumer/ticket/removeTicketController");
const seeTicketsHistoryController_1 = require("../controllers/consumer/ticket/seeTicketsHistoryController");
const acceptTradeController_1 = require("../controllers/consumer/trades/acceptTradeController");
const seeTradesController_1 = require("../controllers/consumer/trades/seeTradesController");
const getNotificationsController_1 = require("../controllers/consumer/notifications/getNotificationsController");
const addFavController = new addFavController_1.AddFavController();
const removeFavController = new removeFavController_1.RemoveFavController();
const seeFavController = new seeFavController_1.SeeFavController();
const seeOneFavController = new seeOneFavController_1.SeeOneFavController();
const addMealCartController = new addMealCartController_1.AddMealCartController();
const seeMealsCartController = new seeMealCartController_1.SeeMealsCartController();
const removeMealsCartController = new removeMealsCartController_1.RemoveMealsCartController();
const seeTradesHistoryController = new seeTradesHistoryController_1.SeeTradesHistoryController();
const removeTicketController = new removeTicketController_1.RemoveTicketController();
const seeTicketsHistoryController = new seeTicketsHistoryController_1.SeeTicketsHistoryController();
const acceptTradeController = new acceptTradeController_1.AcceptTradeController();
const seeTradesController = new seeTradesController_1.SeeTradesController();
const getNotificationsController = new getNotificationsController_1.GetNotificationsController();
//adicionar aos favoritos refeição
consumerRouter.post("/favoriteMeals/:mealId", validateToken_1.validateToken, validateRefreshToken_1.validateRefreshToken, addFavController.handle);
consumerRouter.delete("/favoriteMeals/:favoriteMealId", validateToken_1.validateToken, validateRefreshToken_1.validateRefreshToken, removeFavController.handle);
consumerRouter.get("/favoriteMeals", validateToken_1.validateToken, validateRefreshToken_1.validateRefreshToken, seeFavController.handle);
consumerRouter.get("/favoriteMeals/:favoriteMealId", validateToken_1.validateToken, validateRefreshToken_1.validateRefreshToken, seeOneFavController.handle);
consumerRouter.post("/cart/:mealId", validateToken_1.validateToken, validateRefreshToken_1.validateRefreshToken, addMealCartController.handle);
consumerRouter.get("/cart/meals", validateToken_1.validateToken, validateRefreshToken_1.validateRefreshToken, seeMealsCartController.handle);
consumerRouter.delete("/meals/:cartMealId", validateToken_1.validateToken, validateRefreshToken_1.validateRefreshToken, removeMealsCartController.handle);
consumerRouter.get("/trades", validateToken_1.validateToken, validateRefreshToken_1.validateRefreshToken, seeTradesHistoryController.handle);
consumerRouter.delete("/tickets/:ticketId", validateToken_1.validateToken, validateRefreshToken_1.validateRefreshToken, removeTicketController.handle);
consumerRouter.delete("/tickets/:ticketId", validateToken_1.validateToken, validateRefreshToken_1.validateRefreshToken, removeTicketController.handle);
consumerRouter.get("/tickets", validateToken_1.validateToken, validateRefreshToken_1.validateRefreshToken, seeTicketsHistoryController.handle);
consumerRouter.put("/trades/:ticketId", validateToken_1.validateToken, validateRefreshToken_1.validateRefreshToken, acceptTradeController.handle);
consumerRouter.get("/trades/available", validateToken_1.validateToken, validateRefreshToken_1.validateRefreshToken, seeTradesController.handle);
consumerRouter.get("/notifications", validateToken_1.validateToken, validateRefreshToken_1.validateRefreshToken, isConsumer_1.isConsumer, getNotificationsController.handle);
//# sourceMappingURL=consumerRoutes.js.map